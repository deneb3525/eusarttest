

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Oct 08 19:24:10 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.00
    37                           ; Generated 27/05/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1827 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  011E                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  0219                     	;# 
   171  021A                     	;# 
   172  021B                     	;# 
   173  021C                     	;# 
   174  021D                     	;# 
   175  021E                     	;# 
   176  021F                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029B                     	;# 
   190  029C                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  039A                     	;# 
   207  039C                     	;# 
   208  039D                     	;# 
   209  039E                     	;# 
   210  039F                     	;# 
   211  0415                     	;# 
   212  0416                     	;# 
   213  0417                     	;# 
   214  041C                     	;# 
   215  041D                     	;# 
   216  041E                     	;# 
   217  0FE4                     	;# 
   218  0FE5                     	;# 
   219  0FE6                     	;# 
   220  0FE7                     	;# 
   221  0FE8                     	;# 
   222  0FE9                     	;# 
   223  0FEA                     	;# 
   224  0FEB                     	;# 
   225  0FED                     	;# 
   226  0FEE                     	;# 
   227  0FEF                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  0111                     	;# 
   277  0112                     	;# 
   278  0113                     	;# 
   279  0114                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0118                     	;# 
   284  0119                     	;# 
   285  011A                     	;# 
   286  011B                     	;# 
   287  011D                     	;# 
   288  011E                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0191                     	;# 
   292  0191                     	;# 
   293  0192                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0194                     	;# 
   298  0195                     	;# 
   299  0196                     	;# 
   300  0199                     	;# 
   301  019A                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019C                     	;# 
   307  019C                     	;# 
   308  019D                     	;# 
   309  019E                     	;# 
   310  019F                     	;# 
   311  020C                     	;# 
   312  020D                     	;# 
   313  0211                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0217                     	;# 
   328  0219                     	;# 
   329  021A                     	;# 
   330  021B                     	;# 
   331  021C                     	;# 
   332  021D                     	;# 
   333  021E                     	;# 
   334  021F                     	;# 
   335  0291                     	;# 
   336  0291                     	;# 
   337  0292                     	;# 
   338  0293                     	;# 
   339  0294                     	;# 
   340  0295                     	;# 
   341  0295                     	;# 
   342  0296                     	;# 
   343  0298                     	;# 
   344  0298                     	;# 
   345  0299                     	;# 
   346  029A                     	;# 
   347  029B                     	;# 
   348  029C                     	;# 
   349  029C                     	;# 
   350  029D                     	;# 
   351  029E                     	;# 
   352  029E                     	;# 
   353  0311                     	;# 
   354  0311                     	;# 
   355  0312                     	;# 
   356  0313                     	;# 
   357  0318                     	;# 
   358  0318                     	;# 
   359  0319                     	;# 
   360  031A                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  039A                     	;# 
   365  039C                     	;# 
   366  039D                     	;# 
   367  039E                     	;# 
   368  039F                     	;# 
   369  0415                     	;# 
   370  0416                     	;# 
   371  0417                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  011E                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020C                     	;# 
   470  020D                     	;# 
   471  0211                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0212                     	;# 
   475  0213                     	;# 
   476  0213                     	;# 
   477  0214                     	;# 
   478  0214                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0216                     	;# 
   483  0216                     	;# 
   484  0217                     	;# 
   485  0217                     	;# 
   486  0219                     	;# 
   487  021A                     	;# 
   488  021B                     	;# 
   489  021C                     	;# 
   490  021D                     	;# 
   491  021E                     	;# 
   492  021F                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  029B                     	;# 
   506  029C                     	;# 
   507  029C                     	;# 
   508  029D                     	;# 
   509  029E                     	;# 
   510  029E                     	;# 
   511  0311                     	;# 
   512  0311                     	;# 
   513  0312                     	;# 
   514  0313                     	;# 
   515  0318                     	;# 
   516  0318                     	;# 
   517  0319                     	;# 
   518  031A                     	;# 
   519  0394                     	;# 
   520  0395                     	;# 
   521  0396                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0415                     	;# 
   528  0416                     	;# 
   529  0417                     	;# 
   530  041C                     	;# 
   531  041D                     	;# 
   532  041E                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001E                     	;# 
   572  001F                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0113                     	;# 
   595  0114                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011D                     	;# 
   604  011E                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  0191                     	;# 
   608  0191                     	;# 
   609  0192                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0194                     	;# 
   614  0195                     	;# 
   615  0196                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019C                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  020C                     	;# 
   628  020D                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0216                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0217                     	;# 
   644  0219                     	;# 
   645  021A                     	;# 
   646  021B                     	;# 
   647  021C                     	;# 
   648  021D                     	;# 
   649  021E                     	;# 
   650  021F                     	;# 
   651  0291                     	;# 
   652  0291                     	;# 
   653  0292                     	;# 
   654  0293                     	;# 
   655  0294                     	;# 
   656  0295                     	;# 
   657  0295                     	;# 
   658  0296                     	;# 
   659  0298                     	;# 
   660  0298                     	;# 
   661  0299                     	;# 
   662  029A                     	;# 
   663  029B                     	;# 
   664  029C                     	;# 
   665  029C                     	;# 
   666  029D                     	;# 
   667  029E                     	;# 
   668  029E                     	;# 
   669  0311                     	;# 
   670  0311                     	;# 
   671  0312                     	;# 
   672  0313                     	;# 
   673  0318                     	;# 
   674  0318                     	;# 
   675  0319                     	;# 
   676  031A                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0415                     	;# 
   686  0416                     	;# 
   687  0417                     	;# 
   688  041C                     	;# 
   689  041D                     	;# 
   690  041E                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000D                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0014                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  008C                     	;# 
   732  008D                     	;# 
   733  0091                     	;# 
   734  0092                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011D                     	;# 
   762  011E                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  0191                     	;# 
   766  0191                     	;# 
   767  0192                     	;# 
   768  0193                     	;# 
   769  0193                     	;# 
   770  0193                     	;# 
   771  0194                     	;# 
   772  0195                     	;# 
   773  0196                     	;# 
   774  0199                     	;# 
   775  019A                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019C                     	;# 
   781  019C                     	;# 
   782  019D                     	;# 
   783  019E                     	;# 
   784  019F                     	;# 
   785  020C                     	;# 
   786  020D                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0212                     	;# 
   791  0213                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0214                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0215                     	;# 
   798  0216                     	;# 
   799  0216                     	;# 
   800  0217                     	;# 
   801  0217                     	;# 
   802  0219                     	;# 
   803  021A                     	;# 
   804  021B                     	;# 
   805  021C                     	;# 
   806  021D                     	;# 
   807  021E                     	;# 
   808  021F                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  029A                     	;# 
   821  029B                     	;# 
   822  029C                     	;# 
   823  029C                     	;# 
   824  029D                     	;# 
   825  029E                     	;# 
   826  029E                     	;# 
   827  0311                     	;# 
   828  0311                     	;# 
   829  0312                     	;# 
   830  0313                     	;# 
   831  0318                     	;# 
   832  0318                     	;# 
   833  0319                     	;# 
   834  031A                     	;# 
   835  0394                     	;# 
   836  0395                     	;# 
   837  0396                     	;# 
   838  039A                     	;# 
   839  039C                     	;# 
   840  039D                     	;# 
   841  039E                     	;# 
   842  039F                     	;# 
   843  0415                     	;# 
   844  0416                     	;# 
   845  0417                     	;# 
   846  041C                     	;# 
   847  041D                     	;# 
   848  041E                     	;# 
   849  0FE4                     	;# 
   850  0FE5                     	;# 
   851  0FE6                     	;# 
   852  0FE7                     	;# 
   853  0FE8                     	;# 
   854  0FE9                     	;# 
   855  0FEA                     	;# 
   856  0FEB                     	;# 
   857  0FED                     	;# 
   858  0FEE                     	;# 
   859  0FEF                     	;# 
   860  0000                     	;# 
   861  0001                     	;# 
   862  0002                     	;# 
   863  0003                     	;# 
   864  0004                     	;# 
   865  0005                     	;# 
   866  0006                     	;# 
   867  0007                     	;# 
   868  0008                     	;# 
   869  0009                     	;# 
   870  000A                     	;# 
   871  000B                     	;# 
   872  000C                     	;# 
   873  000D                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0013                     	;# 
   877  0014                     	;# 
   878  0015                     	;# 
   879  0016                     	;# 
   880  0016                     	;# 
   881  0017                     	;# 
   882  0018                     	;# 
   883  0019                     	;# 
   884  001A                     	;# 
   885  001B                     	;# 
   886  001C                     	;# 
   887  001E                     	;# 
   888  001F                     	;# 
   889  008C                     	;# 
   890  008D                     	;# 
   891  0091                     	;# 
   892  0092                     	;# 
   893  0093                     	;# 
   894  0094                     	;# 
   895  0095                     	;# 
   896  0096                     	;# 
   897  0097                     	;# 
   898  0098                     	;# 
   899  0099                     	;# 
   900  009A                     	;# 
   901  009B                     	;# 
   902  009B                     	;# 
   903  009C                     	;# 
   904  009D                     	;# 
   905  009E                     	;# 
   906  010C                     	;# 
   907  010D                     	;# 
   908  0111                     	;# 
   909  0112                     	;# 
   910  0113                     	;# 
   911  0114                     	;# 
   912  0115                     	;# 
   913  0116                     	;# 
   914  0117                     	;# 
   915  0118                     	;# 
   916  0119                     	;# 
   917  011A                     	;# 
   918  011B                     	;# 
   919  011D                     	;# 
   920  011E                     	;# 
   921  018C                     	;# 
   922  018D                     	;# 
   923  0191                     	;# 
   924  0191                     	;# 
   925  0192                     	;# 
   926  0193                     	;# 
   927  0193                     	;# 
   928  0193                     	;# 
   929  0194                     	;# 
   930  0195                     	;# 
   931  0196                     	;# 
   932  0199                     	;# 
   933  019A                     	;# 
   934  019B                     	;# 
   935  019B                     	;# 
   936  019B                     	;# 
   937  019B                     	;# 
   938  019C                     	;# 
   939  019C                     	;# 
   940  019D                     	;# 
   941  019E                     	;# 
   942  019F                     	;# 
   943  020C                     	;# 
   944  020D                     	;# 
   945  0211                     	;# 
   946  0211                     	;# 
   947  0212                     	;# 
   948  0212                     	;# 
   949  0213                     	;# 
   950  0213                     	;# 
   951  0214                     	;# 
   952  0214                     	;# 
   953  0215                     	;# 
   954  0215                     	;# 
   955  0215                     	;# 
   956  0216                     	;# 
   957  0216                     	;# 
   958  0217                     	;# 
   959  0217                     	;# 
   960  0219                     	;# 
   961  021A                     	;# 
   962  021B                     	;# 
   963  021C                     	;# 
   964  021D                     	;# 
   965  021E                     	;# 
   966  021F                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0294                     	;# 
   972  0295                     	;# 
   973  0295                     	;# 
   974  0296                     	;# 
   975  0298                     	;# 
   976  0298                     	;# 
   977  0299                     	;# 
   978  029A                     	;# 
   979  029B                     	;# 
   980  029C                     	;# 
   981  029C                     	;# 
   982  029D                     	;# 
   983  029E                     	;# 
   984  029E                     	;# 
   985  0311                     	;# 
   986  0311                     	;# 
   987  0312                     	;# 
   988  0313                     	;# 
   989  0318                     	;# 
   990  0318                     	;# 
   991  0319                     	;# 
   992  031A                     	;# 
   993  0394                     	;# 
   994  0395                     	;# 
   995  0396                     	;# 
   996  039A                     	;# 
   997  039C                     	;# 
   998  039D                     	;# 
   999  039E                     	;# 
  1000  039F                     	;# 
  1001  0415                     	;# 
  1002  0416                     	;# 
  1003  0417                     	;# 
  1004  041C                     	;# 
  1005  041D                     	;# 
  1006  041E                     	;# 
  1007  0FE4                     	;# 
  1008  0FE5                     	;# 
  1009  0FE6                     	;# 
  1010  0FE7                     	;# 
  1011  0FE8                     	;# 
  1012  0FE9                     	;# 
  1013  0FEA                     	;# 
  1014  0FEB                     	;# 
  1015  0FED                     	;# 
  1016  0FEE                     	;# 
  1017  0FEF                     	;# 
  1018                           
  1019                           	psect	nvBANK0
  1020  003D                     __pnvBANK0:	
  1021  003D                     _EUSART_ErrorHandler:	
  1022  003D                     	ds	2
  1023  003F                     _EUSART_OverrunErrorHandler:	
  1024  003F                     	ds	2
  1025  0041                     _EUSART_FramingErrorHandler:	
  1026  0041                     	ds	2
  1027  0043                     _EUSART_RxDefaultInterruptHandler:	
  1028  0043                     	ds	2
  1029  0045                     _EUSART_TxDefaultInterruptHandler:	
  1030  0045                     	ds	2
  1031  0047                     _eusartTxBufferRemaining:	
  1032  0047                     	ds	1
  1033  0011                     _PIR1bits	set	17
  1034  000B                     _INTCONbits	set	11
  1035  0097                     _WDTCON	set	151
  1036  0098                     _OSCTUNE	set	152
  1037  0099                     _OSCCON	set	153
  1038  0091                     _PIE1bits	set	145
  1039  0095                     _OPTION_REGbits	set	149
  1040  008D                     _TRISB	set	141
  1041  008C                     _TRISA	set	140
  1042  010C                     _LATAbits	set	268
  1043  0116                     _BORCON	set	278
  1044  011E                     _APFCON1	set	286
  1045  011D                     _APFCON0	set	285
  1046  010D                     _LATB	set	269
  1047  010C                     _LATA	set	268
  1048  0199                     _RCREG	set	409
  1049  019D                     _RCSTAbits	set	413
  1050  019A                     _TXREG	set	410
  1051  019E                     _TXSTAbits	set	414
  1052  019C                     _SPBRGH	set	412
  1053  019B                     _SPBRGL	set	411
  1054  019E                     _TXSTA	set	414
  1055  019D                     _RCSTA	set	413
  1056  019F                     _BAUDCON	set	415
  1057  018C                     _ANSELA	set	396
  1058  018D                     _ANSELB	set	397
  1059  020C                     _WPUA	set	524
  1060  020D                     _WPUB	set	525
  1061                           
  1062                           	psect	stringtext1
  1063  0195                     __pstringtext1:	
  1064  0195                     STR_1:	
  1065  0195  3468               	retlw	104	;'h'
  1066  0196  3400               	retlw	0
  1067                           
  1068                           	psect	stringtext2
  1069  0000                     __pstringtext2:	
  1070                           
  1071                           ; #config settings
  1072  0000                     
  1073                           	psect	cinit
  1074  0023                     start_initialization:	
  1075  0023                     __initialization:	
  1076                           
  1077                           ; Clear objects allocated to COMMON
  1078  0023  01FB               	clrf	__pbssCOMMON& (0+127)
  1079                           
  1080                           ; Clear objects allocated to BANK0
  1081  0024  3020               	movlw	low __pbssBANK0
  1082  0025  0084               	movwf	4
  1083  0026  3000               	movlw	high __pbssBANK0
  1084  0027  0085               	movwf	5
  1085  0028  301D               	movlw	29
  1086  0029  3181  2161         	fcall	clear_ram0
  1087  002B                     end_of_initialization:	
  1088                           ;End of C runtime variable initialization code
  1089                           
  1090  002B                     __end_of__initialization:	
  1091  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1092  002C  0020               	movlb	0
  1093  002D  3180  289F         	ljmp	_main	;jump to C main() function
  1094                           
  1095                           	psect	bssCOMMON
  1096  007B                     __pbssCOMMON:	
  1097  007B                     _eusartRxHead:	
  1098  007B                     	ds	1
  1099                           
  1100                           	psect	bssBANK0
  1101  0020                     __pbssBANK0:	
  1102  0020                     _eusartRxStatusBuffer:	
  1103  0020                     	ds	8
  1104  0028                     _eusartRxBuffer:	
  1105  0028                     	ds	8
  1106  0030                     _eusartTxBuffer:	
  1107  0030                     	ds	8
  1108  0038                     _eusartRxLastError:	
  1109  0038                     	ds	1
  1110  0039                     _eusartRxCount:	
  1111  0039                     	ds	1
  1112  003A                     _eusartRxTail:	
  1113  003A                     	ds	1
  1114  003B                     _eusartTxTail:	
  1115  003B                     	ds	1
  1116  003C                     _eusartTxHead:	
  1117  003C                     	ds	1
  1118                           
  1119                           	psect	clrtext
  1120  0161                     clear_ram0:	
  1121                           ;	Called with FSR0 containing the base address, and
  1122                           ;	WREG with the size to clear
  1123                           
  1124  0161  0064               	clrwdt	;clear the watchdog before getting into this loop
  1125  0162                     clrloop0:	
  1126  0162  0180               	clrf	0	;clear RAM location pointed to by FSR
  1127  0163  3101               	addfsr 0,1
  1128  0164  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1129  0165  2962               	goto	clrloop0	;have we reached the end yet?
  1130  0166  3400               	retlw	0	;all done for this memory range, return
  1131                           
  1132                           	psect	cstackCOMMON
  1133  0070                     __pcstackCOMMON:	
  1134  0070                     ?_EUSART_Receive_ISR:	
  1135  0070                     ?_EUSART_Transmit_ISR:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ??_EUSART_Transmit_ISR:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_EUSART_DefaultErrorHandler:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_EUSART_RxDataHandler:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ??_EUSART_RxDataHandler:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_OSCILLATOR_Initialize:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_WDT_Initialize:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_PIN_MANAGER_Initialize:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_EUSART_Initialize:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_EUSART_Write:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_putch:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_INTERRUPT_InterruptManager:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_SYSTEM_Initialize:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_main:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0x0
  1191  0070                     	ds	1
  1192  0071                     ?_EUSART_SetRxInterruptHandler:	
  1193  0071                     ??_EUSART_Receive_ISR:	
  1194                           ; 1 bytes @ 0x1
  1195                           
  1196  0071                     ?_EUSART_SetTxInterruptHandler:	
  1197                           ; 1 bytes @ 0x1
  1198                           
  1199  0071                     ?_EUSART_SetFramingErrorHandler:	
  1200                           ; 1 bytes @ 0x1
  1201                           
  1202  0071                     ?_EUSART_SetOverrunErrorHandler:	
  1203                           ; 1 bytes @ 0x1
  1204                           
  1205  0071                     ?_EUSART_SetErrorHandler:	
  1206                           ; 1 bytes @ 0x1
  1207                           
  1208  0071                     ??_EUSART_DefaultErrorHandler:	
  1209                           ; 1 bytes @ 0x1
  1210                           
  1211  0071                     ??_OSCILLATOR_Initialize:	
  1212                           ; 1 bytes @ 0x1
  1213                           
  1214  0071                     ??_WDT_Initialize:	
  1215                           ; 1 bytes @ 0x1
  1216                           
  1217  0071                     ??_PIN_MANAGER_Initialize:	
  1218                           ; 1 bytes @ 0x1
  1219                           
  1220  0071                     ??_EUSART_Write:	
  1221                           ; 1 bytes @ 0x1
  1222                           
  1223  0071                     ??_INTERRUPT_InterruptManager:	
  1224                           ; 1 bytes @ 0x1
  1225                           
  1226  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1227                           ; 1 bytes @ 0x1
  1228                           
  1229  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1230                           ; 2 bytes @ 0x1
  1231                           
  1232  0071                     EUSART_SetErrorHandler@interruptHandler:	
  1233                           ; 2 bytes @ 0x1
  1234                           
  1235  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1236                           ; 2 bytes @ 0x1
  1237                           
  1238  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1239                           ; 2 bytes @ 0x1
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x1
  1243  0071                     	ds	1
  1244  0072                     EUSART_Write@txData:	
  1245                           
  1246                           ; 1 bytes @ 0x2
  1247  0072                     	ds	1
  1248  0073                     ??_EUSART_SetRxInterruptHandler:	
  1249  0073                     ??_EUSART_SetTxInterruptHandler:	
  1250                           ; 1 bytes @ 0x3
  1251                           
  1252  0073                     ??_EUSART_SetFramingErrorHandler:	
  1253                           ; 1 bytes @ 0x3
  1254                           
  1255  0073                     ??_EUSART_SetOverrunErrorHandler:	
  1256                           ; 1 bytes @ 0x3
  1257                           
  1258  0073                     ??_EUSART_SetErrorHandler:	
  1259                           ; 1 bytes @ 0x3
  1260                           
  1261  0073                     ??_EUSART_Initialize:	
  1262                           ; 1 bytes @ 0x3
  1263                           
  1264  0073                     ??_putch:	
  1265                           ; 1 bytes @ 0x3
  1266                           
  1267  0073                     putch@txData:	
  1268                           ; 1 bytes @ 0x3
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x3
  1272  0073                     	ds	1
  1273  0074                     ??_SYSTEM_Initialize:	
  1274  0074                     ?_printf:	
  1275                           ; 1 bytes @ 0x4
  1276                           
  1277  0074                     printf@f:	
  1278                           ; 2 bytes @ 0x4
  1279                           
  1280                           
  1281                           ; 2 bytes @ 0x4
  1282  0074                     	ds	2
  1283  0076                     ??_printf:	
  1284                           
  1285                           ; 1 bytes @ 0x6
  1286  0076                     	ds	3
  1287  0079                     printf@ap:	
  1288                           
  1289                           ; 1 bytes @ 0x9
  1290  0079                     	ds	1
  1291  007A                     printf@c:	
  1292                           
  1293                           ; 1 bytes @ 0xA
  1294  007A                     	ds	1
  1295                           
  1296                           	psect	cstackBANK0
  1297  0048                     __pcstackBANK0:	
  1298  0048                     ??_main:	
  1299                           
  1300                           ; 1 bytes @ 0x0
  1301  0048                     	ds	2
  1302                           
  1303                           	psect	maintext
  1304  009F                     __pmaintext:	
  1305 ;;
  1306 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1307 ;;
  1308 ;; *************** function _main *****************
  1309 ;; Defined at:
  1310 ;;		line 49 in file "main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : B1F/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1324 ;;      Params:         0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0
  1326 ;;      Temps:          0       2       0       0       0       0
  1327 ;;      Totals:         0       2       0       0       0       0
  1328 ;;Total ram usage:        2 bytes
  1329 ;; Hardware stack levels required when called:    7
  1330 ;; This function calls:
  1331 ;;		_SYSTEM_Initialize
  1332 ;;		_printf
  1333 ;; This function is called by:
  1334 ;;		Startup code after reset
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _main
  1340  009F                     _main:	
  1341                           
  1342                           ;main.c: 52: SYSTEM_Initialize();
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1346  009F  3181  214E  3180   	fcall	_SYSTEM_Initialize
  1347                           
  1348                           ;main.c: 58: (INTCONbits.GIE = 1);
  1349  00A2  178B               	bsf	11,7	;volatile
  1350                           
  1351                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1352  00A3  170B               	bsf	11,6	;volatile
  1353  00A4                     l1154:	
  1354                           ;main.c: 70: {;main.c: 71: do { LATAbits.LATA1 = 1; } while(0);
  1355                           
  1356                           ;main.c: 69: while (1)
  1357                           
  1358  00A4  0022               	movlb	2	; select bank2
  1359  00A5  148C               	bsf	12,1	;volatile
  1360                           
  1361                           ;main.c: 72: _delay((unsigned long)((100)*(500000/4000.0)));
  1362  00A6  3011               	movlw	17
  1363  00A7  0020               	movlb	0	; select bank0
  1364  00A8  00C8               	movwf	??_main
  1365  00A9  303A               	movlw	58
  1366  00AA                     u357:	
  1367  00AA  0B89               	decfsz	9,f
  1368  00AB  28AA               	goto	u357
  1369  00AC  0BC8               	decfsz	??_main,f
  1370  00AD  28AA               	goto	u357
  1371  00AE  0000               	nop
  1372                           
  1373                           ;main.c: 73: do { LATAbits.LATA1 = 0; } while(0);
  1374  00AF  0022               	movlb	2	; select bank2
  1375  00B0  108C               	bcf	12,1	;volatile
  1376                           
  1377                           ;main.c: 74: _delay((unsigned long)((2000)*(500000/4000.0)));
  1378  00B1  3002               	movlw	2
  1379  00B2  0020               	movlb	0	; select bank0
  1380  00B3  00C9               	movwf	??_main+1
  1381  00B4  3045               	movlw	69
  1382  00B5  00C8               	movwf	??_main
  1383  00B6  30A9               	movlw	169
  1384  00B7                     u367:	
  1385  00B7  0B89               	decfsz	9,f
  1386  00B8  28B7               	goto	u367
  1387  00B9  0BC8               	decfsz	??_main,f
  1388  00BA  28B7               	goto	u367
  1389  00BB  0BC9               	decfsz	??_main+1,f
  1390  00BC  28B7               	goto	u367
  1391  00BD  3200               	nop2
  1392                           
  1393                           ;main.c: 76: printf("h");
  1394  00BE  3095               	movlw	low (STR_1| (0+32768))
  1395  00BF  00F4               	movwf	printf@f
  1396  00C0  3081               	movlw	high (STR_1| (0+32768))
  1397  00C1  00F5               	movwf	printf@f+1
  1398  00C2  3181  2106  3180   	fcall	_printf
  1399  00C5  28A4               	goto	l1154
  1400  00C6                     __end_of_main:	
  1401                           
  1402                           	psect	text1
  1403  0106                     __ptext1:	
  1404 ;; *************** function _printf *****************
  1405 ;; Defined at:
  1406 ;;		line 472 in file "E:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  f               2    4[COMMON] PTR const unsigned char 
  1409 ;;		 -> STR_1(2), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  tmpval          4    0        struct .
  1412 ;;  cp              2    0        PTR const unsigned char 
  1413 ;;  len             2    0        unsigned int 
  1414 ;;  val             2    0        unsigned int 
  1415 ;;  c               1   10[COMMON] unsigned char 
  1416 ;;  ap              1    9[COMMON] PTR void [1]
  1417 ;;		 -> ?_printf(2), 
  1418 ;;  flag            1    0        unsigned char 
  1419 ;;  prec            1    0        char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2    4[COMMON] int 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1429 ;;      Params:         2       0       0       0       0       0
  1430 ;;      Locals:         2       0       0       0       0       0
  1431 ;;      Temps:          3       0       0       0       0       0
  1432 ;;      Totals:         7       0       0       0       0       0
  1433 ;;Total ram usage:        7 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    6
  1436 ;; This function calls:
  1437 ;;		_putch
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _printf
  1445  0106                     _printf:	
  1446                           
  1447                           ;doprnt.c: 474: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 516: signed char prec;;dopr
      +                          nt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;d
      +                          oprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned int val;;do
      +                          prnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = __va_sta
      +                          rt();
  1448                           
  1449                           ;incstack = 0
  1450                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1451  0106  3076               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1452  0107  00F6               	movwf	??_printf
  1453  0108  0876               	movf	??_printf,w
  1454  0109  00F9               	movwf	printf@ap
  1455  010A                     l1114:	
  1456                           ;doprnt.c: 555: };doprnt.c: 1441: {
  1457                           
  1458                           ;doprnt.c: 554: continue;
  1459                           
  1460                           ;doprnt.c: 548: while((c = *f++)) {
  1461                           
  1462  010A  0875               	movf	printf@f+1,w
  1463  010B  00F7               	movwf	??_printf+1
  1464  010C  0874               	movf	printf@f,w
  1465  010D  00F6               	movwf	??_printf
  1466  010E  0AF4               	incf	printf@f,f
  1467  010F  1903               	skipnz
  1468  0110  0AF5               	incf	printf@f+1,f
  1469  0111  0876               	movf	??_printf,w
  1470  0112  0084               	movwf	4
  1471  0113  0877               	movf	??_printf+1,w
  1472  0114  0085               	movwf	5
  1473  0115  0800               	movf	0,w	;code access
  1474  0116  00F8               	movwf	??_printf+2
  1475  0117  0878               	movf	??_printf+2,w
  1476  0118  00FA               	movwf	printf@c
  1477  0119  087A               	movf	printf@c,w
  1478  011A  1903               	btfsc	3,2
  1479  011B  0008               	return
  1480                           
  1481                           ;doprnt.c: 552: {;doprnt.c: 553: (putch(c) );
  1482  011C  087A               	movf	printf@c,w
  1483  011D  3181  2185  3181   	fcall	_putch
  1484  0120  290A               	goto	l1114
  1485  0121                     __end_of_printf:	
  1486                           ;doprnt.c: 1488: };doprnt.c: 1552: };doprnt.c: 1559: return 0;;	Return value of _printf 
      +                          is never used
  1487                           
  1488                           
  1489                           	psect	text2
  1490  0185                     __ptext2:	
  1491 ;; *************** function _putch *****************
  1492 ;; Defined at:
  1493 ;;		line 198 in file "mcc_generated_files/eusart.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  txData          1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  txData          1    3[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1507 ;;      Params:         0       0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0
  1510 ;;      Totals:         1       0       0       0       0       0
  1511 ;;Total ram usage:        1 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    5
  1514 ;; This function calls:
  1515 ;;		_EUSART_Write
  1516 ;; This function is called by:
  1517 ;;		_printf
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _putch
  1523  0185                     _putch:	
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1527                           ;putch@txData stored from wreg
  1528  0185  00F3               	movwf	putch@txData
  1529                           
  1530                           ;eusart.c: 200: EUSART_Write(txData);
  1531  0186  0873               	movf	putch@txData,w
  1532  0187  3180  20C6         	fcall	_EUSART_Write
  1533  0189  0008               	return
  1534  018A                     __end_of_putch:	
  1535                           
  1536                           	psect	text3
  1537  00C6                     __ptext3:	
  1538 ;; *************** function _EUSART_Write *****************
  1539 ;; Defined at:
  1540 ;;		line 170 in file "mcc_generated_files/eusart.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  txData          1    wreg     unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  txData          1    2[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1554 ;;      Params:         0       0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0       0
  1556 ;;      Temps:          1       0       0       0       0       0
  1557 ;;      Totals:         2       0       0       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    4
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_putch
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _EUSART_Write
  1570  00C6                     _EUSART_Write:	
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1574                           ;EUSART_Write@txData stored from wreg
  1575  00C6  00F2               	movwf	EUSART_Write@txData
  1576  00C7                     l990:	
  1577                           ;eusart.c: 173: {
  1578                           
  1579                           ;eusart.c: 172: while(0 == eusartTxBufferRemaining)
  1580                           
  1581  00C7  0020               	movlb	0	; select bank0
  1582  00C8  0847               	movf	_eusartTxBufferRemaining,w	;volatile
  1583  00C9  1903               	btfsc	3,2
  1584  00CA  28C7               	goto	l990
  1585                           
  1586                           ;eusart.c: 174: };eusart.c: 176: if(0 == PIE1bits.TXIE)
  1587  00CB  0021               	movlb	1	; select bank1
  1588  00CC  1A11               	btfsc	17,4	;volatile
  1589  00CD  28D2               	goto	l128
  1590                           
  1591                           ;eusart.c: 177: {;eusart.c: 178: TXREG = txData;
  1592  00CE  0872               	movf	EUSART_Write@txData,w
  1593  00CF  0023               	movlb	3	; select bank3
  1594  00D0  009A               	movwf	26	;volatile
  1595                           
  1596                           ;eusart.c: 179: }
  1597  00D1  28E6               	goto	l1004
  1598  00D2                     l128:	
  1599                           
  1600                           ;eusart.c: 180: else;eusart.c: 181: {;eusart.c: 182: PIE1bits.TXIE = 0;
  1601  00D2  1211               	bcf	17,4	;volatile
  1602                           
  1603                           ;eusart.c: 183: eusartTxBuffer[eusartTxHead++] = txData;
  1604  00D3  0872               	movf	EUSART_Write@txData,w
  1605  00D4  00F1               	movwf	??_EUSART_Write
  1606  00D5  0020               	movlb	0	; select bank0
  1607  00D6  083C               	movf	_eusartTxHead,w
  1608  00D7  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1609  00D8  0086               	movwf	6
  1610  00D9  0187               	clrf	7
  1611  00DA  0871               	movf	??_EUSART_Write,w
  1612  00DB  0081               	movwf	1
  1613  00DC  3001               	movlw	1
  1614  00DD  00F1               	movwf	??_EUSART_Write
  1615  00DE  0871               	movf	??_EUSART_Write,w
  1616  00DF  07BC               	addwf	_eusartTxHead,f	;volatile
  1617                           
  1618                           ;eusart.c: 184: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1619  00E0  3008               	movlw	8
  1620  00E1  023C               	subwf	_eusartTxHead,w	;volatile
  1621  00E2  1803               	btfsc	3,0
  1622                           
  1623                           ;eusart.c: 185: {;eusart.c: 186: eusartTxHead = 0;
  1624  00E3  01BC               	clrf	_eusartTxHead	;volatile
  1625                           
  1626                           ;eusart.c: 187: };eusart.c: 188: eusartTxBufferRemaining--;
  1627  00E4  3001               	movlw	1
  1628  00E5  02C7               	subwf	_eusartTxBufferRemaining,f	;volatile
  1629  00E6                     l1004:	
  1630                           
  1631                           ;eusart.c: 189: };eusart.c: 190: PIE1bits.TXIE = 1;
  1632  00E6  0021               	movlb	1	; select bank1
  1633  00E7  1611               	bsf	17,4	;volatile
  1634  00E8  0008               	return
  1635  00E9                     __end_of_EUSART_Write:	
  1636                           
  1637                           	psect	text4
  1638  014E                     __ptext4:	
  1639 ;; *************** function _SYSTEM_Initialize *****************
  1640 ;; Defined at:
  1641 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1655 ;;      Params:         0       0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    6
  1662 ;; This function calls:
  1663 ;;		_EUSART_Initialize
  1664 ;;		_OSCILLATOR_Initialize
  1665 ;;		_PIN_MANAGER_Initialize
  1666 ;;		_WDT_Initialize
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _SYSTEM_Initialize
  1674  014E                     _SYSTEM_Initialize:	
  1675                           
  1676                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1680  014E  3181  2138  3181   	fcall	_PIN_MANAGER_Initialize
  1681                           
  1682                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1683  0151  3181  215A  3181   	fcall	_OSCILLATOR_Initialize
  1684                           
  1685                           ;mcc.c: 55: WDT_Initialize();
  1686  0154  3181  218A  3181   	fcall	_WDT_Initialize
  1687                           
  1688                           ;mcc.c: 56: EUSART_Initialize();
  1689  0157  3180  202F         	fcall	_EUSART_Initialize
  1690  0159  0008               	return
  1691  015A                     __end_of_SYSTEM_Initialize:	
  1692                           
  1693                           	psect	text5
  1694  018A                     __ptext5:	
  1695 ;; *************** function _WDT_Initialize *****************
  1696 ;; Defined at:
  1697 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1711 ;;      Params:         0       0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    4
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_SYSTEM_Initialize
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _WDT_Initialize
  1727  018A                     _WDT_Initialize:	
  1728                           
  1729                           ;mcc.c: 72: WDTCON = 0x16;
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _WDT_Initialize: [wreg]
  1733  018A  3016               	movlw	22
  1734  018B  0021               	movlb	1	; select bank1
  1735  018C  0097               	movwf	23	;volatile
  1736  018D  0008               	return
  1737  018E                     __end_of_WDT_Initialize:	
  1738                           
  1739                           	psect	text6
  1740  0138                     __ptext6:	
  1741 ;; *************** function _PIN_MANAGER_Initialize *****************
  1742 ;; Defined at:
  1743 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1757 ;;      Params:         0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    4
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_SYSTEM_Initialize
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _PIN_MANAGER_Initialize
  1773  0138                     _PIN_MANAGER_Initialize:	
  1774                           
  1775                           ;pin_manager.c: 62: LATA = 0x00;
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1779  0138  0022               	movlb	2	; select bank2
  1780  0139  018C               	clrf	12	;volatile
  1781                           
  1782                           ;pin_manager.c: 63: LATB = 0x00;
  1783  013A  018D               	clrf	13	;volatile
  1784                           
  1785                           ;pin_manager.c: 68: TRISA = 0xFD;
  1786  013B  30FD               	movlw	253
  1787  013C  0021               	movlb	1	; select bank1
  1788  013D  008C               	movwf	12	;volatile
  1789                           
  1790                           ;pin_manager.c: 69: TRISB = 0xFF;
  1791  013E  30FF               	movlw	255
  1792  013F  008D               	movwf	13	;volatile
  1793                           
  1794                           ;pin_manager.c: 74: ANSELB = 0xF8;
  1795  0140  30F8               	movlw	248
  1796  0141  0023               	movlb	3	; select bank3
  1797  0142  008D               	movwf	13	;volatile
  1798                           
  1799                           ;pin_manager.c: 75: ANSELA = 0x1F;
  1800  0143  301F               	movlw	31
  1801  0144  008C               	movwf	12	;volatile
  1802                           
  1803                           ;pin_manager.c: 80: WPUB = 0x00;
  1804  0145  0024               	movlb	4	; select bank4
  1805  0146  018D               	clrf	13	;volatile
  1806                           
  1807                           ;pin_manager.c: 81: WPUA = 0x00;
  1808  0147  018C               	clrf	12	;volatile
  1809                           
  1810                           ;pin_manager.c: 82: OPTION_REGbits.nWPUEN = 1;
  1811  0148  0021               	movlb	1	; select bank1
  1812  0149  1795               	bsf	21,7	;volatile
  1813                           
  1814                           ;pin_manager.c: 89: APFCON0 = 0x00;
  1815  014A  0022               	movlb	2	; select bank2
  1816  014B  019D               	clrf	29	;volatile
  1817                           
  1818                           ;pin_manager.c: 90: APFCON1 = 0x00;
  1819  014C  019E               	clrf	30	;volatile
  1820  014D  0008               	return
  1821  014E                     __end_of_PIN_MANAGER_Initialize:	
  1822                           
  1823                           	psect	text7
  1824  015A                     __ptext7:	
  1825 ;; *************** function _OSCILLATOR_Initialize *****************
  1826 ;; Defined at:
  1827 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1841 ;;      Params:         0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    4
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_SYSTEM_Initialize
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _OSCILLATOR_Initialize
  1857  015A                     _OSCILLATOR_Initialize:	
  1858                           
  1859                           ;mcc.c: 62: OSCCON = 0x38;
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1863  015A  3038               	movlw	56
  1864  015B  0021               	movlb	1	; select bank1
  1865  015C  0099               	movwf	25	;volatile
  1866                           
  1867                           ;mcc.c: 64: OSCTUNE = 0x00;
  1868  015D  0198               	clrf	24	;volatile
  1869                           
  1870                           ;mcc.c: 66: BORCON = 0x00;
  1871  015E  0022               	movlb	2	; select bank2
  1872  015F  0196               	clrf	22	;volatile
  1873  0160  0008               	return
  1874  0161                     __end_of_OSCILLATOR_Initialize:	
  1875                           
  1876                           	psect	text8
  1877  002F                     __ptext8:	
  1878 ;; *************** function _EUSART_Initialize *****************
  1879 ;; Defined at:
  1880 ;;		line 85 in file "mcc_generated_files/eusart.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1894 ;;      Params:         0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0
  1896 ;;      Temps:          1       0       0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		_EUSART_SetErrorHandler
  1903 ;;		_EUSART_SetFramingErrorHandler
  1904 ;;		_EUSART_SetOverrunErrorHandler
  1905 ;;		_EUSART_SetRxInterruptHandler
  1906 ;;		_EUSART_SetTxInterruptHandler
  1907 ;; This function is called by:
  1908 ;;		_SYSTEM_Initialize
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _EUSART_Initialize
  1914  002F                     _EUSART_Initialize:	
  1915                           
  1916                           ;eusart.c: 88: PIE1bits.RCIE = 0;
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1920  002F  0021               	movlb	1	; select bank1
  1921  0030  1291               	bcf	17,5	;volatile
  1922                           
  1923                           ;eusart.c: 89: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1924  0031  306D               	movlw	low _EUSART_Receive_ISR
  1925  0032  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  1926  0033  3000               	movlw	high _EUSART_Receive_ISR
  1927  0034  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  1928  0035  3181  216D  3180   	fcall	_EUSART_SetRxInterruptHandler
  1929                           
  1930                           ;eusart.c: 90: PIE1bits.TXIE = 0;
  1931  0038  0021               	movlb	1	; select bank1
  1932  0039  1211               	bcf	17,4	;volatile
  1933                           
  1934                           ;eusart.c: 91: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  1935  003A  30E9               	movlw	low _EUSART_Transmit_ISR
  1936  003B  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  1937  003C  3000               	movlw	high _EUSART_Transmit_ISR
  1938  003D  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  1939  003E  3181  2167  3180   	fcall	_EUSART_SetTxInterruptHandler
  1940                           
  1941                           ;eusart.c: 95: BAUDCON = 0x08;
  1942  0041  3008               	movlw	8
  1943  0042  0023               	movlb	3	; select bank3
  1944  0043  009F               	movwf	31	;volatile
  1945                           
  1946                           ;eusart.c: 98: RCSTA = 0x90;
  1947  0044  3090               	movlw	144
  1948  0045  009D               	movwf	29	;volatile
  1949                           
  1950                           ;eusart.c: 101: TXSTA = 0x24;
  1951  0046  3024               	movlw	36
  1952  0047  009E               	movwf	30	;volatile
  1953                           
  1954                           ;eusart.c: 104: SPBRGL = 0x0C;
  1955  0048  300C               	movlw	12
  1956  0049  009B               	movwf	27	;volatile
  1957                           
  1958                           ;eusart.c: 107: SPBRGH = 0x00;
  1959  004A  019C               	clrf	28	;volatile
  1960                           
  1961                           ;eusart.c: 110: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  1962  004B  3097               	movlw	low _EUSART_DefaultFramingErrorHandler
  1963  004C  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  1964  004D  3001               	movlw	high _EUSART_DefaultFramingErrorHandler
  1965  004E  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  1966  004F  3181  2179  3180   	fcall	_EUSART_SetFramingErrorHandler
  1967                           
  1968                           ;eusart.c: 111: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  1969  0052  308E               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1970  0053  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  1971  0054  3001               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1972  0055  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  1973  0056  3181  2173  3180   	fcall	_EUSART_SetOverrunErrorHandler
  1974                           
  1975                           ;eusart.c: 112: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  1976  0059  3092               	movlw	low _EUSART_DefaultErrorHandler
  1977  005A  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  1978  005B  3001               	movlw	high _EUSART_DefaultErrorHandler
  1979  005C  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  1980  005D  3181  217F         	fcall	_EUSART_SetErrorHandler
  1981                           
  1982                           ;eusart.c: 114: eusartRxLastError.status = 0;
  1983  005F  0020               	movlb	0	; select bank0
  1984  0060  01B8               	clrf	_eusartRxLastError	;volatile
  1985                           
  1986                           ;eusart.c: 117: eusartTxHead = 0;
  1987  0061  01BC               	clrf	_eusartTxHead	;volatile
  1988                           
  1989                           ;eusart.c: 118: eusartTxTail = 0;
  1990  0062  01BB               	clrf	_eusartTxTail	;volatile
  1991                           
  1992                           ;eusart.c: 119: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  1993  0063  3008               	movlw	8
  1994  0064  00F3               	movwf	??_EUSART_Initialize
  1995  0065  0873               	movf	??_EUSART_Initialize,w
  1996  0066  00C7               	movwf	_eusartTxBufferRemaining	;volatile
  1997                           
  1998                           ;eusart.c: 121: eusartRxHead = 0;
  1999  0067  01FB               	clrf	_eusartRxHead	;volatile
  2000                           
  2001                           ;eusart.c: 122: eusartRxTail = 0;
  2002  0068  01BA               	clrf	_eusartRxTail	;volatile
  2003                           
  2004                           ;eusart.c: 123: eusartRxCount = 0;
  2005  0069  01B9               	clrf	_eusartRxCount	;volatile
  2006                           
  2007                           ;eusart.c: 126: PIE1bits.RCIE = 1;
  2008  006A  0021               	movlb	1	; select bank1
  2009  006B  1691               	bsf	17,5	;volatile
  2010  006C  0008               	return
  2011  006D                     __end_of_EUSART_Initialize:	
  2012                           
  2013                           	psect	text9
  2014  0167                     __ptext9:	
  2015 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2016 ;; Defined at:
  2017 ;;		line 282 in file "mcc_generated_files/eusart.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2020 ;;		 -> EUSART_Transmit_ISR(1), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2032 ;;      Params:         2       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0
  2035 ;;      Totals:         2       0       0       0       0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    4
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_EUSART_Initialize
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _EUSART_SetTxInterruptHandler
  2048  0167                     _EUSART_SetTxInterruptHandler:	
  2049                           
  2050                           ;eusart.c: 283: EUSART_TxDefaultInterruptHandler = interruptHandler;
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2054  0167  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  2055  0168  0020               	movlb	0	; select bank0
  2056  0169  00C6               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2057  016A  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  2058  016B  00C5               	movwf	_EUSART_TxDefaultInterruptHandler
  2059  016C  0008               	return
  2060  016D                     __end_of_EUSART_SetTxInterruptHandler:	
  2061                           
  2062                           	psect	text10
  2063  016D                     __ptext10:	
  2064 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2065 ;; Defined at:
  2066 ;;		line 286 in file "mcc_generated_files/eusart.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2069 ;;		 -> EUSART_Receive_ISR(1), 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2081 ;;      Params:         2       0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0
  2084 ;;      Totals:         2       0       0       0       0       0
  2085 ;;Total ram usage:        2 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    4
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_EUSART_Initialize
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _EUSART_SetRxInterruptHandler
  2097  016D                     _EUSART_SetRxInterruptHandler:	
  2098                           
  2099                           ;eusart.c: 287: EUSART_RxDefaultInterruptHandler = interruptHandler;
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2103  016D  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2104  016E  0020               	movlb	0	; select bank0
  2105  016F  00C4               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2106  0170  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2107  0171  00C3               	movwf	_EUSART_RxDefaultInterruptHandler
  2108  0172  0008               	return
  2109  0173                     __end_of_EUSART_SetRxInterruptHandler:	
  2110                           
  2111                           	psect	text11
  2112  0173                     __ptext11:	
  2113 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2114 ;; Defined at:
  2115 ;;		line 274 in file "mcc_generated_files/eusart.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2118 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2130 ;;      Params:         2       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0
  2133 ;;      Totals:         2       0       0       0       0       0
  2134 ;;Total ram usage:        2 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    4
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_EUSART_Initialize
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _EUSART_SetOverrunErrorHandler
  2146  0173                     _EUSART_SetOverrunErrorHandler:	
  2147                           
  2148                           ;eusart.c: 275: EUSART_OverrunErrorHandler = interruptHandler;
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2152  0173  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2153  0174  0020               	movlb	0	; select bank0
  2154  0175  00C0               	movwf	_EUSART_OverrunErrorHandler+1
  2155  0176  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2156  0177  00BF               	movwf	_EUSART_OverrunErrorHandler
  2157  0178  0008               	return
  2158  0179                     __end_of_EUSART_SetOverrunErrorHandler:	
  2159                           
  2160                           	psect	text12
  2161  0179                     __ptext12:	
  2162 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2163 ;; Defined at:
  2164 ;;		line 270 in file "mcc_generated_files/eusart.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2167 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2179 ;;      Params:         2       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0
  2182 ;;      Totals:         2       0       0       0       0       0
  2183 ;;Total ram usage:        2 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    4
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_EUSART_Initialize
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _EUSART_SetFramingErrorHandler
  2195  0179                     _EUSART_SetFramingErrorHandler:	
  2196                           
  2197                           ;eusart.c: 271: EUSART_FramingErrorHandler = interruptHandler;
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2201  0179  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2202  017A  0020               	movlb	0	; select bank0
  2203  017B  00C2               	movwf	_EUSART_FramingErrorHandler+1
  2204  017C  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2205  017D  00C1               	movwf	_EUSART_FramingErrorHandler
  2206  017E  0008               	return
  2207  017F                     __end_of_EUSART_SetFramingErrorHandler:	
  2208                           
  2209                           	psect	text13
  2210  017F                     __ptext13:	
  2211 ;; *************** function _EUSART_SetErrorHandler *****************
  2212 ;; Defined at:
  2213 ;;		line 278 in file "mcc_generated_files/eusart.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  2216 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2228 ;;      Params:         2       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0
  2231 ;;      Totals:         2       0       0       0       0       0
  2232 ;;Total ram usage:        2 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    4
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_EUSART_Initialize
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _EUSART_SetErrorHandler
  2244  017F                     _EUSART_SetErrorHandler:	
  2245                           
  2246                           ;eusart.c: 279: EUSART_ErrorHandler = interruptHandler;
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2250  017F  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2251  0180  0020               	movlb	0	; select bank0
  2252  0181  00BE               	movwf	_EUSART_ErrorHandler+1
  2253  0182  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2254  0183  00BD               	movwf	_EUSART_ErrorHandler
  2255  0184  0008               	return
  2256  0185                     __end_of_EUSART_SetErrorHandler:	
  2257                           
  2258                           	psect	intentry
  2259  0004                     __pintentry:	
  2260 ;; *************** function _INTERRUPT_InterruptManager *****************
  2261 ;; Defined at:
  2262 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2276 ;;      Params:         0       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    3
  2283 ;; This function calls:
  2284 ;;		Absolute function
  2285 ;;		_EUSART_Receive_ISR
  2286 ;;		_EUSART_Transmit_ISR
  2287 ;; This function is called by:
  2288 ;;		Interrupt level 1
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292  0004                     _INTERRUPT_InterruptManager:	
  2293                           
  2294                           ;incstack = 0
  2295  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2296                           
  2297                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2298  0005  3180               	pagesel	$
  2299                           
  2300                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  2301  0006  1F0B               	btfss	11,6	;volatile
  2302  0007  281F               	goto	i1l199
  2303                           
  2304                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.T
      +                          XIF == 1)
  2305  0008  0021               	movlb	1	; select bank1
  2306  0009  1E11               	btfss	17,4	;volatile
  2307  000A  2814               	goto	i1l194
  2308  000B  0020               	movlb	0	; select bank0
  2309  000C  1E11               	btfss	17,4	;volatile
  2310  000D  2814               	goto	i1l194
  2311                           
  2312                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  2313  000E  0846               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  2314  000F  008A               	movwf	10
  2315  0010  0845               	movf	_EUSART_TxDefaultInterruptHandler,w
  2316  0011  000A               	callw
  2317  0012  3180               	pagesel	$
  2318                           
  2319                           ;interrupt_manager.c: 60: }
  2320  0013  281F               	goto	i1l199
  2321  0014                     i1l194:	
  2322                           
  2323                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  2324  0014  0021               	movlb	1	; select bank1
  2325  0015  1E91               	btfss	17,5	;volatile
  2326  0016  281F               	goto	i1l199
  2327  0017  0020               	movlb	0	; select bank0
  2328  0018  1E91               	btfss	17,5	;volatile
  2329  0019  281F               	goto	i1l199
  2330                           
  2331                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  2332  001A  0844               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  2333  001B  008A               	movwf	10
  2334  001C  0843               	movf	_EUSART_RxDefaultInterruptHandler,w
  2335  001D  000A               	callw
  2336  001E  3180               	pagesel	$
  2337  001F                     i1l199:	
  2338                           ;interrupt_manager.c: 70: else;interrupt_manager.c: 71: {
  2339                           
  2340                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  2341                           
  2342                           ;interrupt_manager.c: 65: else;interrupt_manager.c: 66: {
  2343                           
  2344                           ;interrupt_manager.c: 64: }
  2345                           
  2346  001F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2347  0020  0009               	retfie
  2348  0021                     __end_of_INTERRUPT_InterruptManager:	
  2349                           
  2350                           	psect	text15
  2351  00E9                     __ptext15:	
  2352 ;; *************** function _EUSART_Transmit_ISR *****************
  2353 ;; Defined at:
  2354 ;;		line 203 in file "mcc_generated_files/eusart.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2368 ;;      Params:         0       0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0
  2370 ;;      Temps:          1       0       0       0       0       0
  2371 ;;      Totals:         1       0       0       0       0       0
  2372 ;;Total ram usage:        1 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_EUSART_Initialize
  2378 ;;		_INTERRUPT_InterruptManager
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _EUSART_Transmit_ISR
  2384  00E9                     _EUSART_Transmit_ISR:	
  2385                           
  2386                           ;eusart.c: 207: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2390  00E9  3008               	movlw	8
  2391  00EA  0020               	movlb	0	; select bank0
  2392  00EB  0247               	subwf	_eusartTxBufferRemaining,w	;volatile
  2393  00EC  1803               	skipnc
  2394  00ED  2903               	goto	i1l140
  2395                           
  2396                           ;eusart.c: 208: {;eusart.c: 209: TXREG = eusartTxBuffer[eusartTxTail++];
  2397  00EE  083B               	movf	_eusartTxTail,w
  2398  00EF  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2399  00F0  0086               	movwf	6
  2400  00F1  0187               	clrf	7
  2401  00F2  0801               	movf	1,w
  2402  00F3  0023               	movlb	3	; select bank3
  2403  00F4  009A               	movwf	26	;volatile
  2404  00F5  3001               	movlw	1
  2405  00F6  00F0               	movwf	??_EUSART_Transmit_ISR
  2406  00F7  0870               	movf	??_EUSART_Transmit_ISR,w
  2407  00F8  0020               	movlb	0	; select bank0
  2408  00F9  07BB               	addwf	_eusartTxTail,f	;volatile
  2409                           
  2410                           ;eusart.c: 210: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2411  00FA  3008               	movlw	8
  2412  00FB  023B               	subwf	_eusartTxTail,w	;volatile
  2413  00FC  1803               	btfsc	3,0
  2414                           
  2415                           ;eusart.c: 211: {;eusart.c: 212: eusartTxTail = 0;
  2416  00FD  01BB               	clrf	_eusartTxTail	;volatile
  2417                           
  2418                           ;eusart.c: 213: };eusart.c: 214: eusartTxBufferRemaining++;
  2419  00FE  3001               	movlw	1
  2420  00FF  00F0               	movwf	??_EUSART_Transmit_ISR
  2421  0100  0870               	movf	??_EUSART_Transmit_ISR,w
  2422  0101  07C7               	addwf	_eusartTxBufferRemaining,f	;volatile
  2423                           
  2424                           ;eusart.c: 215: }
  2425  0102  0008               	return
  2426  0103                     i1l140:	
  2427                           
  2428                           ;eusart.c: 216: else;eusart.c: 217: {;eusart.c: 218: PIE1bits.TXIE = 0;
  2429  0103  0021               	movlb	1	; select bank1
  2430  0104  1211               	bcf	17,4	;volatile
  2431  0105  0008               	return
  2432  0106                     __end_of_EUSART_Transmit_ISR:	
  2433                           
  2434                           	psect	text16
  2435  006D                     __ptext16:	
  2436 ;; *************** function _EUSART_Receive_ISR *****************
  2437 ;; Defined at:
  2438 ;;		line 222 in file "mcc_generated_files/eusart.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2452 ;;      Params:         0       0       0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0
  2455 ;;      Totals:         0       0       0       0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    2
  2459 ;; This function calls:
  2460 ;;		Absolute function
  2461 ;;		_EUSART_DefaultErrorHandler
  2462 ;;		_EUSART_DefaultFramingErrorHandler
  2463 ;;		_EUSART_DefaultOverrunErrorHandler
  2464 ;;		_EUSART_RxDataHandler
  2465 ;; This function is called by:
  2466 ;;		_EUSART_Initialize
  2467 ;;		_INTERRUPT_InterruptManager
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _EUSART_Receive_ISR
  2473  006D                     _EUSART_Receive_ISR:	
  2474                           
  2475                           ;eusart.c: 225: eusartRxStatusBuffer[eusartRxHead].status = 0;
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2479  006D  087B               	movf	_eusartRxHead,w	;volatile
  2480  006E  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  2481  006F  0086               	movwf	6
  2482  0070  0187               	clrf	7
  2483  0071  0181               	clrf	1
  2484                           
  2485                           ;eusart.c: 227: if(RCSTAbits.FERR){
  2486  0072  0023               	movlb	3	; select bank3
  2487  0073  1D1D               	btfss	29,2	;volatile
  2488  0074  2880               	goto	i1l1096
  2489                           
  2490                           ;eusart.c: 228: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  2491  0075  087B               	movf	_eusartRxHead,w	;volatile
  2492  0076  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  2493  0077  0086               	movwf	6
  2494  0078  0187               	clrf	7
  2495  0079  1481               	bsf	1,1
  2496                           
  2497                           ;eusart.c: 229: EUSART_FramingErrorHandler();
  2498  007A  0020               	movlb	0	; select bank0
  2499  007B  0842               	movf	_EUSART_FramingErrorHandler+1,w
  2500  007C  008A               	movwf	10
  2501  007D  0841               	movf	_EUSART_FramingErrorHandler,w
  2502  007E  000A               	callw
  2503  007F  3180               	pagesel	$
  2504  0080                     i1l1096:	
  2505                           
  2506                           ;eusart.c: 230: };eusart.c: 232: if(RCSTAbits.OERR){
  2507  0080  0023               	movlb	3	; select bank3
  2508  0081  1C9D               	btfss	29,1	;volatile
  2509  0082  288E               	goto	i1l1102
  2510                           
  2511                           ;eusart.c: 233: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  2512  0083  087B               	movf	_eusartRxHead,w	;volatile
  2513  0084  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  2514  0085  0086               	movwf	6
  2515  0086  0187               	clrf	7
  2516  0087  1501               	bsf	1,2
  2517                           
  2518                           ;eusart.c: 234: EUSART_OverrunErrorHandler();
  2519  0088  0020               	movlb	0	; select bank0
  2520  0089  0840               	movf	_EUSART_OverrunErrorHandler+1,w
  2521  008A  008A               	movwf	10
  2522  008B  083F               	movf	_EUSART_OverrunErrorHandler,w
  2523  008C  000A               	callw
  2524  008D  3180               	pagesel	$
  2525  008E                     i1l1102:	
  2526                           
  2527                           ;eusart.c: 235: };eusart.c: 237: if(eusartRxStatusBuffer[eusartRxHead].status){
  2528  008E  087B               	movf	_eusartRxHead,w	;volatile
  2529  008F  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  2530  0090  0086               	movwf	6
  2531  0091  0187               	clrf	7
  2532  0092  0801               	movf	1,w
  2533  0093  1903               	btfsc	3,2
  2534  0094  289C               	goto	i1l1106
  2535                           
  2536                           ;eusart.c: 238: EUSART_ErrorHandler();
  2537  0095  0020               	movlb	0	; select bank0
  2538  0096  083E               	movf	_EUSART_ErrorHandler+1,w
  2539  0097  008A               	movwf	10
  2540  0098  083D               	movf	_EUSART_ErrorHandler,w
  2541  0099  000A               	callw
  2542  009A  3180               	pagesel	$
  2543                           
  2544                           ;eusart.c: 239: } else {
  2545  009B  0008               	return
  2546  009C                     i1l1106:	
  2547                           
  2548                           ;eusart.c: 240: EUSART_RxDataHandler();
  2549  009C  3181  2121         	fcall	_EUSART_RxDataHandler
  2550  009E  0008               	return
  2551  009F                     __end_of_EUSART_Receive_ISR:	
  2552                           
  2553                           	psect	text17
  2554  018E                     __ptext17:	
  2555 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  2556 ;; Defined at:
  2557 ;;		line 258 in file "mcc_generated_files/eusart.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		None
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2571 ;;      Params:         0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_EUSART_Initialize
  2581 ;;		_EUSART_Receive_ISR
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  2587  018E                     _EUSART_DefaultOverrunErrorHandler:	
  2588                           
  2589                           ;eusart.c: 261: RCSTAbits.CREN = 0;
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  2593  018E  0023               	movlb	3	; select bank3
  2594  018F  121D               	bcf	29,4	;volatile
  2595                           
  2596                           ;eusart.c: 262: RCSTAbits.CREN = 1;
  2597  0190  161D               	bsf	29,4	;volatile
  2598  0191  0008               	return
  2599  0192                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  2600                           
  2601                           	psect	text18
  2602  0197                     __ptext18:	
  2603 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  2604 ;; Defined at:
  2605 ;;		line 256 in file "mcc_generated_files/eusart.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		None
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2619 ;;      Params:         0       0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_EUSART_Initialize
  2629 ;;		_EUSART_Receive_ISR
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _EUSART_DefaultFramingErrorHandler
  2635  0197                     _EUSART_DefaultFramingErrorHandler:	
  2636                           
  2637                           ;incstack = 0
  2638                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  2639  0197  0008               	return
  2640  0198                     __end_of_EUSART_DefaultFramingErrorHandler:	
  2641                           
  2642                           	psect	text19
  2643  0192                     __ptext19:	
  2644 ;; *************** function _EUSART_DefaultErrorHandler *****************
  2645 ;; Defined at:
  2646 ;;		line 266 in file "mcc_generated_files/eusart.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2660 ;;      Params:         0       0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    1
  2667 ;; This function calls:
  2668 ;;		_EUSART_RxDataHandler
  2669 ;; This function is called by:
  2670 ;;		_EUSART_Initialize
  2671 ;;		_EUSART_Receive_ISR
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _EUSART_DefaultErrorHandler
  2677  0192                     _EUSART_DefaultErrorHandler:	
  2678                           
  2679                           ;eusart.c: 267: EUSART_RxDataHandler();
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2683  0192  3181  2121         	fcall	_EUSART_RxDataHandler
  2684  0194  0008               	return
  2685  0195                     __end_of_EUSART_DefaultErrorHandler:	
  2686                           
  2687                           	psect	text20
  2688  0121                     __ptext20:	
  2689 ;; *************** function _EUSART_RxDataHandler *****************
  2690 ;; Defined at:
  2691 ;;		line 246 in file "mcc_generated_files/eusart.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2705 ;;      Params:         0       0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0
  2707 ;;      Temps:          1       0       0       0       0       0
  2708 ;;      Totals:         1       0       0       0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_EUSART_Receive_ISR
  2715 ;;		_EUSART_DefaultErrorHandler
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _EUSART_RxDataHandler
  2721  0121                     _EUSART_RxDataHandler:	
  2722                           
  2723                           ;eusart.c: 248: eusartRxBuffer[eusartRxHead++] = RCREG;
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  2727  0121  0023               	movlb	3	; select bank3
  2728  0122  0819               	movf	25,w	;volatile
  2729  0123  00F0               	movwf	??_EUSART_RxDataHandler
  2730  0124  087B               	movf	_eusartRxHead,w
  2731  0125  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2732  0126  0086               	movwf	6
  2733  0127  0187               	clrf	7
  2734  0128  0870               	movf	??_EUSART_RxDataHandler,w
  2735  0129  0081               	movwf	1
  2736  012A  3001               	movlw	1
  2737  012B  00F0               	movwf	??_EUSART_RxDataHandler
  2738  012C  0870               	movf	??_EUSART_RxDataHandler,w
  2739  012D  07FB               	addwf	_eusartRxHead,f	;volatile
  2740                           
  2741                           ;eusart.c: 249: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2742  012E  3008               	movlw	8
  2743  012F  027B               	subwf	_eusartRxHead,w	;volatile
  2744  0130  1803               	btfsc	3,0
  2745                           
  2746                           ;eusart.c: 250: {;eusart.c: 251: eusartRxHead = 0;
  2747  0131  01FB               	clrf	_eusartRxHead	;volatile
  2748                           
  2749                           ;eusart.c: 252: };eusart.c: 253: eusartRxCount++;
  2750  0132  3001               	movlw	1
  2751  0133  00F0               	movwf	??_EUSART_RxDataHandler
  2752  0134  0870               	movf	??_EUSART_RxDataHandler,w
  2753  0135  0020               	movlb	0	; select bank0
  2754  0136  07B9               	addwf	_eusartRxCount,f	;volatile
  2755  0137  0008               	return
  2756  0138                     __end_of_EUSART_RxDataHandler:	
  2757  007E                     btemp	set	126	;btemp
  2758  007E                     int$flags	set	126
  2759  007E                     wtemp0	set	126


Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         30
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      2      42
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     540
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     165
                                              4 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     375
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     375
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      75
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      36       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      2A       6       52.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      36      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Oct 08 19:24:10 2018

                ?_EUSART_SetRxInterruptHandler 0071                                    __CFG_CP$OFF 0000  
                                  __CFG_LVP$ON 0000                                            l128 00D2  
                                          l990 00C7                                   __CFG_CPD$OFF 0000  
                                          u357 00AA                                            u367 00B7  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0071  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                           l1004 00E6  
                                         l1114 010A                                           l1154 00A4  
                                         STR_1 0195                                           _LATA 010C  
                                         _LATB 010D                                           _WPUA 020C  
                                         _WPUB 020D                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 009F  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0021                                  __CFG_MCLRE$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0161                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                          i1l140 0103  
                                        i1l194 0014                                          i1l199 001F  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                               _WDT_Initialize 018A                                          _putch 0185  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 0023  
                                 __end_of_main 00C6                                 ??_EUSART_Write 0071  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                                       ??_main 0048                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 018E      __end_of_EUSART_DefaultFramingErrorHandler 0198  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0197  
                   _EUSART_OverrunErrorHandler 003F                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l1102 008E  
                                       i1l1106 009C                                         i1l1096 0080  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                               __CFG_PWRTE$OFF 0000                                 __CFG_STVREN$ON 0000  
                          _EUSART_Transmit_ISR 00E9                                         _printf 0106  
                              ?_WDT_Initialize 0070                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 014E                        __end_of__initialization 002B  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 016D  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0167  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0074  
                                __end_of_putch 018A                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                ??_EUSART_SetOverrunErrorHandler 0073  
                    __end_of_SYSTEM_Initialize 015A                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0073                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 00E9                    __size_of_EUSART_Receive_ISR 0032  
                                   __pmaintext 009F                  ?_EUSART_SetTxInterruptHandler 0071  
             _EUSART_TxDefaultInterruptHandler 0045                                     __pintentry 0004  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0074                                  _eusartRxCount 0039  
                __size_of_EUSART_RxDataHandler 0017                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0073            __size_of_EUSART_DefaultErrorHandler 0003  
                                      __ptext1 0106                                        __ptext2 0185  
                                      __ptext3 00C6                                        __ptext4 014E  
                                      __ptext5 018A                                        __ptext6 0138  
                                      __ptext7 015A                                        __ptext8 002F  
                                      __ptext9 0167                                __size_of_printf 001B  
                        _OSCILLATOR_Initialize 015A                       ??_PIN_MANAGER_Initialize 0071  
                   __size_of_SYSTEM_Initialize 000C                                        clrloop0 0162  
                         end_of_initialization 002B          __end_of_EUSART_SetOverrunErrorHandler 0179  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0173  
                            _EUSART_Initialize 002F                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                        printf@c 007A  
                                      printf@f 0074                            ??_EUSART_Initialize 0073  
                             ??_WDT_Initialize 0071                 ??_EUSART_SetTxInterruptHandler 0073  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0023  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 006D  
                                    _TXSTAbits 019E             __end_of_EUSART_DefaultErrorHandler 0195  
                   _EUSART_DefaultErrorHandler 0192                                   _EUSART_Write 00C6  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 0121  
                          start_initialization 0023                __size_of_PIN_MANAGER_Initialize 0016  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
                                  putch@txData 0073                 ?_EUSART_SetOverrunErrorHandler 0071  
                   _EUSART_FramingErrorHandler 0041                         _EUSART_SetErrorHandler 017F  
                                     ??_printf 0076                    __end_of_EUSART_Transmit_ISR 0106  
                                  __pbssCOMMON 007B                                      ___latbits 0001  
                                __pcstackBANK0 0048                     __end_of_EUSART_Receive_ISR 009F  
                   __size_of_EUSART_Initialize 003E               _EUSART_RxDefaultInterruptHandler 0043  
                                    __pnvBANK0 003D                   __end_of_EUSART_RxDataHandler 0138  
                       _PIN_MANAGER_Initialize 0138                                   _eusartRxHead 007B  
                                 _eusartTxHead 003C                                   _eusartRxTail 003A  
                                 _eusartTxTail 003B                   ??_INTERRUPT_InterruptManager 0071  
                      _eusartTxBufferRemaining 0047                                 __size_of_putch 0005  
                               _eusartRxBuffer 0028                                 _eusartTxBuffer 0030  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0071  
                                    clear_ram0 0161                                       _PIE1bits 0091  
                            _eusartRxLastError 0038            __size_of_INTERRUPT_InterruptManager 001D  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0073  
    __end_of_EUSART_DefaultOverrunErrorHandler 0192     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 018E                        ??_OSCILLATOR_Initialize 0071  
                          _EUSART_ErrorHandler 003D                    ?_EUSART_DefaultErrorHandler 0070  
                         _EUSART_RxDataHandler 0121                                       __ptext10 016D  
                                     __ptext11 0173                                       __ptext20 0121  
                                     __ptext12 0179                                       __ptext13 017F  
                                     __ptext15 00E9                                       __ptext16 006D  
                                     __ptext17 018E                                       __ptext18 0197  
                                     __ptext19 0192                                  __size_of_main 0027  
                      ?_EUSART_SetErrorHandler 0071  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0021  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 017F  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0179  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0185  
                            __CFG_CLKOUTEN$OFF 0000           __end_of_EUSART_SetRxInterruptHandler 0173  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 016D  
                                     printf@ap 0079                             _EUSART_Receive_ISR 006D  
EUSART_SetFramingErrorHandler@interruptHandler 0071                                  __pstringtext1 0195  
                                __pstringtext2 0000                            ?_EUSART_Receive_ISR 0070  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 001D  
               __end_of_PIN_MANAGER_Initialize 014E                           ??_EUSART_Receive_ISR 0071  
